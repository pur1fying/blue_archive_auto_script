import{_ as s,c as a,o as t,ah as e}from"./chunks/framework.DaDXF32t.js";const c=JSON.parse('{"title":"图像资源管理","description":"","frontmatter":{},"headers":[],"relativePath":"develop_doc/script/image_resource.md","filePath":"develop_doc/script/image_resource.md","lastUpdated":1758810505000}'),l={name:"develop_doc/script/image_resource.md"};function h(n,i,d,p,k,r){return t(),a("div",null,i[0]||(i[0]=[e(`<h1 id="图像资源管理" tabindex="-1">图像资源管理 <a class="header-anchor" href="#图像资源管理" aria-label="Permalink to “图像资源管理”">​</a></h1><div class="info custom-block"><p class="custom-block-title custom-block-title-default">INFO</p><p>阅读这部分内容前你可能需要了解</p><ol><li><p>图像被加载到内存后的数据结构, 如何访问每一处的像素值</p></li><li><p>基础的python-opencv的函数使用</p><table tabindex="0"><thead><tr><th>函数名称</th><th>作用</th></tr></thead><tbody><tr><td><code>cv2.imread</code></td><td>读取图像</td></tr><tr><td><code>cv2.imwrite</code></td><td>保存图像</td></tr><tr><td><code>cv2.resize</code></td><td>裁剪图像</td></tr><tr><td><code>cv2.cvtColor</code></td><td>转换图像颜色空间</td></tr><tr><td><strong><code>cv2.matchTemplate</code></strong></td><td>模板匹配</td></tr></tbody></table></li></ol></div><h2 id="图像资源读取" tabindex="-1">图像资源读取 <a class="header-anchor" href="#图像资源读取" aria-label="Permalink to “图像资源读取”">​</a></h2><p>对应文件路径 : <code>&quot;core/position.py&quot;</code></p><p>规则:</p><ol><li><p>图像具有 server, prefix, name 和 position, 这些信息存储在 <code>src/images/server/x_y_range/*.py</code> 文件中。</p><table tabindex="0"><thead><tr><th>变量名</th><th>含义</th><th>是否必要</th></tr></thead><tbody><tr><td><code>server</code></td><td>服务器</td><td>是</td></tr><tr><td><code>path</code></td><td>图像路径</td><td>是</td></tr><tr><td><code>prefix</code></td><td>图像所属任务类别</td><td>是</td></tr><tr><td><code>name</code></td><td>图像名称</td><td>是</td></tr><tr><td><code>position</code></td><td>图像截取时坐标 <br>(x1, y1, x2, y2)<br>左上, 右下</td><td>否</td></tr></tbody></table><ul><li>note: 你也许会疑惑为什么大部分x_y_range.py中<code>prefix</code>和<code>path</code>相同, 请注意<code>x_y_range/activity</code>中的x_y_range.py, 每一期活动需要从不同的<code>path</code>加载图像, 但是他们在<code>prefix</code>都是<code>activity</code><ul><li>即 <ol><li><code>path</code>仅与图像加载有关</li><li><code>prefix</code>仅与图像的引用有关</li></ol></li></ul></li></ul></li><li><p>图像的真实路径为</p><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;src/images/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">server</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">.png&quot;</span></span></code></pre></div></li><li><p>图像被加载到内存后，存储在 <code>core.position.image_dic</code> 中</p><ul><li>获取图像<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">template </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> image_dic[server][</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{name}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;]</span></span></code></pre></div></li></ul></li><li><p>图像的位置信息被储存在 <code>core.position.image_x_y_range</code> 中 获取图像区域:</p><ul><li>方法一</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> area </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> image_x_y_range[server][prefix][name]</span></span></code></pre></div><ul><li>方法二</li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">area </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_area(server, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefix</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">_</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">{</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">}</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div></li><li><p>图像的 prefix 可以包含 <code>&quot;_&quot;</code> 字符，但 name 不能包含。<br> 原因: <a href="#get-area"><code>get_area</code></a> 使用 <code>rsplit</code> 方法分割<code>prefix</code>和<code>name</code>, 因此 name 不能包含 <code>&quot;_&quot;</code>, 一般用<code>&quot;-&quot;</code>分割。</p></li></ol><p>例:</p><ul><li><code>src/images/CN/x_y_range/arena.py</code>, 该路径表示服务器是<strong>国服(CN)</strong></li></ul><div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefix </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;arena&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # 图像用于竞技场任务</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">path </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;arena&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">      # 存放在 &quot;src/images/CN/arena&quot; 目录下</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x_y_range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;menu&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">107</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">162</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">),    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 图像&quot;src/images/CN/arena/menu.png&quot;截取时的坐标</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &#39;edit-force&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">107</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">162</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">36</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>剪切后的截图图像放入 <code>resource/images/server/arena</code> 目录下：</p><div class="language-shell"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">resource/images/server/arena</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">│</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">├──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> menu.png</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">└──</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> edit-force.png</span></span></code></pre></div><h2 id="相关函数" tabindex="-1">相关函数 <a class="header-anchor" href="#相关函数" aria-label="Permalink to “相关函数”">​</a></h2><h3 id="init-image-data" tabindex="-1"><code>init_image_data</code> <a class="header-anchor" href="#init-image-data" aria-label="Permalink to “init_image_data”">​</a></h3><ul><li><strong>Args</strong>: <ol><li><code>self</code>: <a href="/develop_doc/script/Baas_thread.html"><strong>Baas_thread</strong></a> 的实例, 用于提供<code>server</code> / <code>current_game_activity</code>等信息</li></ol></li><li><strong>description</strong>: 根据<code>self.server</code>, 初始化<strong>一个服务器</strong>的所有图像数据</li><li><strong>note</strong>: <ol><li>该函数扫描<code>src/image/server/x_y_range</code>目录下的所有文件, 根据上文<a href="#图像资源读取">图像资源读取</a>规则初始化图像数据</li><li>每一期活动的图像单独加载, 根据当期活动(<code>self.current_game_activity</code>)名称加载对应图像</li></ol></li></ul><h3 id="get-area" tabindex="-1"><code>get_area</code> <a class="header-anchor" href="#get-area" aria-label="Permalink to “get_area”">​</a></h3><ul><li><strong>Args</strong>: <ol><li><code>server</code></li><li><code>name</code></li></ol></li><li><strong>description</strong>: 获取指定图像的区域</li><li><strong>note</strong>: 参数中的<code>name</code>与上文中的<code>name</code>不同, 这里的<code>name</code>是<code>prefix_name</code>的形式。</li><li><strong>return</strong>: <code>(x1, y1, x2, y2)</code></li><li>例:<div class="language-python"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">area </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> get_area(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CN&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;arena_menu&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># (107, 9, 162, 36)</span></span></code></pre></div></li></ul>`,16)]))}const g=s(l,[["render",h]]);export{c as __pageData,g as default};
