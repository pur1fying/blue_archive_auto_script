import{_ as s,c as i,o as e,ah as t}from"./chunks/framework.DaDXF32t.js";const o=JSON.parse('{"title":"数据更新基类 class BaseDataUpdater","description":"","frontmatter":{},"headers":[],"relativePath":"develop_doc/script/auto_fight_BaseDataUpdater.md","filePath":"develop_doc/script/auto_fight_BaseDataUpdater.md","lastUpdated":1759835208000}'),n={name:"develop_doc/script/auto_fight_BaseDataUpdater.md"};function l(h,a,p,d,r,k){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="数据更新基类-class-basedataupdater" tabindex="-1">数据更新基类 <code>class BaseDataUpdater</code> <a class="header-anchor" href="#数据更新基类-class-basedataupdater" aria-label="Permalink to “数据更新基类 class BaseDataUpdater”">​</a></h1><div class="language-cpp"><button title="Copy Code" class="copy"></button><span class="lang">cpp</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseDataUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    explicit</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> BaseDataUpdater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">BAAS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> baas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">screenshot_data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> estimated_time_cost</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> constexpr</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">string</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> data_name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    virtual</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> display_data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">protected:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BAASLogger</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> logger;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    BAAS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> baas;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    screenshot_data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> data;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="成员函数-member-functions" tabindex="-1">成员函数 (Member Functions) <a class="header-anchor" href="#成员函数-member-functions" aria-label="Permalink to “成员函数 (Member Functions)”">​</a></h2><h3 id="update" tabindex="-1"><code>update</code> <a class="header-anchor" href="#update" aria-label="Permalink to “update”">​</a></h3><ul><li>每一项数据更新的具体逻辑在此实现</li></ul><h3 id="estimated-time-cost" tabindex="-1"><code>estimated_time_cost</code> <a class="header-anchor" href="#estimated-time-cost" aria-label="Permalink to “estimated_time_cost”">​</a></h3><ul><li>数据更新的预估时间, 用于决定数据更新顺序</li></ul><h3 id="data-name" tabindex="-1"><code>data_name</code> <a class="header-anchor" href="#data-name" aria-label="Permalink to “data_name”">​</a></h3><ul><li>数据名</li></ul><h3 id="display-data" tabindex="-1"><code>display_data</code> <a class="header-anchor" href="#display-data" aria-label="Permalink to “display_data”">​</a></h3><ul><li>展示更新数据</li></ul><h2 id="成员变量-members" tabindex="-1">成员变量 (Members) <a class="header-anchor" href="#成员变量-members" aria-label="Permalink to “成员变量 (Members)”">​</a></h2><h3 id="logger" tabindex="-1"><code>logger</code> <a class="header-anchor" href="#logger" aria-label="Permalink to “logger”">​</a></h3><p>日志记录器指针</p><h3 id="baas" tabindex="-1"><code>baas</code> <a class="header-anchor" href="#baas" aria-label="Permalink to “baas”">​</a></h3><p><code>baas</code> 类实例, 提供模拟器交互 / 截图等api</p><h3 id="screenshot-data" tabindex="-1"><code>screenshot_data</code> <a class="header-anchor" href="#screenshot-data" aria-label="Permalink to “screenshot_data”">​</a></h3><p>指向自动战斗数据记录结构的指针</p>`,18)]))}const g=s(n,[["render",l]]);export{o as __pageData,g as default};
