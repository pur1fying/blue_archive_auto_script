import{_ as a,c as t,o,ah as r}from"./chunks/framework.DaDXF32t.js";const h=JSON.parse('{"title":"BAAS 开发文档","description":"","frontmatter":{},"headers":[],"relativePath":"develop_doc/develop_guide.md","filePath":"develop_doc/develop_guide.md","lastUpdated":1759412563000}'),s={name:"develop_doc/develop_guide.md"};function d(l,e,n,p,c,i){return o(),t("div",null,e[0]||(e[0]=[r('<h1 id="baas-开发文档" tabindex="-1">BAAS 开发文档 <a class="header-anchor" href="#baas-开发文档" aria-label="Permalink to “BAAS 开发文档”">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to “介绍”">​</a></h2><p><strong>蔚蓝档案</strong>作为一款游戏性不强的游戏, 有许多重复的日常任务, <strong>BAAS</strong>的初心就是解放用户双手, 为玩家提供一个7x24的托管工具, 上至自动凹总力战, 下至一天八次咖啡厅摸头, 都是<strong>BAAS</strong>期望帮助用户完成的任务。但是现在仍然有许多模块需要完善, 所以<strong>BAAS</strong>仍在活跃开发中。</p><p><strong>BAAS</strong>的开发文档会详细介绍设计模式，常用类与函数，以及每一条配置的意义，在帮助开发者了解函数是如何使用的同时，也会提供一些可运行的源码示例。</p><p><strong>pur1fy</strong>是一个追求性能的开发者, 所以功能代码会<a href="/develop_doc/script/BAAS_cpp.html">向C++转型</a>, 不过请放心, 大部分功能仍会保持它的Python实现, 仅少部分性能敏感的模块会转而使用C++实现(例如目前的OCR)</p><h3 id="设计模式" tabindex="-1">设计模式 <a class="header-anchor" href="#设计模式" aria-label="Permalink to “设计模式”">​</a></h3><p>简而言之, BAAS在循环中: <br> 1.<a href="/develop_doc/script/screenshot.html">获取游戏截图</a><br> 2.从截图中<a href="/develop_doc/script/game_feature.html">获取游戏状态</a><br> 3.决定<a href="/develop_doc/script/control.html">操作</a></p><div class="warning custom-block"><p class="custom-block-title custom-block-title-default">WARNING</p><p>开发文档并不收录每个函数的具体实现, 请在项目中查看源码</p></div>',8)]))}const A=a(s,[["render",d]]);export{h as __pageData,A as default};
