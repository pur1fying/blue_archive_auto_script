import{_ as a,c as s,o as e,ah as l}from"./chunks/framework.DaDXF32t.js";const k=JSON.parse('{"title":"BAAS CLI 用法","description":"","frontmatter":{},"headers":[],"relativePath":"usage_doc/CLI.md","filePath":"usage_doc/CLI.md","lastUpdated":1756465088000}'),n={name:"usage_doc/CLI.md"};function t(h,i,p,c,d,r){return e(),s("div",null,i[0]||(i[0]=[l(`<h1 id="baas-cli-用法" tabindex="-1">BAAS CLI 用法 <a class="header-anchor" href="#baas-cli-用法" aria-label="Permalink to “BAAS CLI 用法”">​</a></h1><p>BAAS CLI 提供了通过命令行运行 BAAS 核心功能的能力。</p><p><strong>提示</strong>：BAAS CLI 目前为早期开发阶段，功能可能暂时不完善。未来会逐步完善功能，并且在用法上提供更好的设计。</p><h2 id="cli-运行模式" tabindex="-1">CLI 运行模式 <a class="header-anchor" href="#cli-运行模式" aria-label="Permalink to “CLI 运行模式”">​</a></h2><p>在 CLI 运行模式下，BAAS CLI 会依次执行 <code>cli.example.py</code> 中列出的所有任务，并在执行完毕后退出。这种运行模式不常驻内存消耗系统资源，适合结合 cron 或 launchd 等计划任务工具定时执行。</p><h3 id="macos-下安装及使用" tabindex="-1">macOS 下安装及使用 <a class="header-anchor" href="#macos-下安装及使用" aria-label="Permalink to “macOS 下安装及使用”">​</a></h3><p>暂时需要 <a href="https://www.anaconda.com/" target="_blank" rel="noreferrer">Anaconda</a> 提供的 Python 运行环境以支持 OCR 功能正常运行。</p><ol><li>安装 Anaconda，创建 Python 运行环境：</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> init</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 退出并重新打开终端，确保 conda 正常初始化完成</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> create</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> baas</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> python=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.12</span></span></code></pre></div><ol start="2"><li>下载 BAAS 源代码（建议使用 Git clone 方式方便更新），进入源代码目录，安装依赖：</li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 注意，每次打开终端都需要重新激活 conda 环境</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> activate</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> baas</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pdm</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span></code></pre></div><ol start="2"><li><p>执行 <code>pdm run window.py</code> 运行 BAAS GUI，创建配置文件目录并按需调整配置。</p></li><li><p>将 <code>cli.example.py</code> 复制为 <code>cli.your_account.py</code>，修改其中配置文件目录名为 <code>config</code> 目录下刚才 BAAS GUI 创建的配置文件目录名。可以通过注释或者取消注释 Python 代码的方式调整 BAAS 需要执行的任务。</p></li><li><p>执行 <code>pdm run cli.your_account.py</code> 运行 BAAS CLI。一次运行将依次执行 <code>cli.your_account.py</code> 中列出的所有任务。</p></li><li><p>可以通过 cron 或者 launchd 等工具定时执行 BAAS CLI。这种情况需要使用以下命令：</p></li></ol><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">conda</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -n</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> baas</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --live-stream</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pdm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cli.your_account.py</span></span></code></pre></div><h2 id="service-运行模式" tabindex="-1">Service 运行模式 <a class="header-anchor" href="#service-运行模式" aria-label="Permalink to “Service 运行模式”">​</a></h2><p>在 Service 模式下，BAAS CLI 会启动一个永久运行的服务，并使用与 GUI 版本完全相同的内置任务调度器定时执行任务。内置任务调度器需要执行的任务和计划时间可以在 BAAS GUI 里进行配置。</p><h3 id="macos-下安装及使用-1" tabindex="-1">macOS 下安装及使用 <a class="header-anchor" href="#macos-下安装及使用-1" aria-label="Permalink to “macOS 下安装及使用”">​</a></h3><p>运行环境准备与 CLI 运行模式相同，不再赘述。</p><ol><li><p>将 <code>service.example.py</code> 复制为 <code>service.your_account.py</code>，修改其中配置文件目录名为 <code>config</code> 目录下 BAAS GUI 创建的配置文件目录名。</p></li><li><p>执行 <code>pdm run service.your_account.py</code> 以 Service 模式运行 BAAS CLI。</p></li></ol>`,18)]))}const g=a(n,[["render",t]]);export{k as __pageData,g as default};
